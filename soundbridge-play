#!/usr/bin/env perl
use strict;
use warnings;

use Data::Dumper;
use List::Util qw(first);
use XML::Simple;
use HTML::Entities;
use Net::UPnP::ControlPoint;
use Net::UPnP::AV::MediaRenderer;

sub find_device($$@) {
    my $type = shift;
    my $name = shift;
    first {
            $_->getdevicetype   =~ /$type/
        and $_->getfriendlyname =~ /$name/i
    } @_;
}

my $xml = XML::Simple->new(
    ForceArray  => 1,
    KeyAttr     => 'id',
    KeepRoot    => 1,
);

my $cp = Net::UPnP::ControlPoint->new;
my @devices = $cp->search(mx => 1);

my $src = find_device MediaServer   => 'Gst Launch',  @devices;
my $dst = find_device MediaRenderer => 'Soundbridge', @devices;

die "Unable to find the source 'Gst Launch'\n"       unless $src;
die "Unable to find the destination 'Soundbridge'\n" unless $dst;

my $directory = first { $_->getservicetype =~ /ContentDirectory/ }
                      $src->getservicelist;

# we subvert the api here so we can just fucking do what we want
my $action = $directory->postcontrol(
    Browse => {
        ObjectID        => 0,
        BrowseFlag      => 'BrowseDirectChildren',
        Filter          => '*',
        StartingIndex   => 0,
        RequestedCount  => 0,
        SortCriteria    => '',
    },
);

# Get the stream we want
my $result = $xml->XMLin($action->getargumentlist->{'Result'})
    or die "Bad action result: ", Dumper($action->getargumentlist), "\n";

my $items  = $result->{'DIDL-Lite'}[0]{'item'};
my $name   = shift || 'streaming';
my $stream = first { /LPCM/ }
               map { $_->{'content'} }
                   @{$items->{$name}{'res'}};

die "Unable to find stream '$name' being served by Rygel\n"
    unless $stream;

print "Playing '$name' over the soundbridge\n";

# Remove extraneous metadata
delete $items->{$_} for grep { $_ ne $name } keys %$items;

# Let's go!
my $renderer = Net::UPnP::AV::MediaRenderer->new;
$renderer->setdevice($dst);
$renderer->setAVTransportURI(
    CurrentURI => $stream,
    CurrentURIMetaData => encode_entities($xml->XMLout($result)),
    InstanceID => 0,
);
$renderer->play;

